on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      directory:
        type: string
        default: "."
      repos:
        type: string
      config:
        type: string
        default: "Release"
      version:
        type: string
        required: true
      release:
        type: string
        required: true
      extra:
        type: string
        default: ""
      branch:
        type: string
        default: ${{ github.ref_name }}
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: Geode-solutions/actions/install/checkout@master
        with:
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - name: Install dependencies
        uses: Geode-solutions/actions/install/cpp-dependencies@master
        id: repos
        with:
          repos: ${{ inputs.repos }}
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
          system: win64
          save: false
      - uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      - name: Install Azure Sign Tool
        uses: Geode-solutions/actions/install/azure-sign@master
      - name: Generate package
        run: |
          gh api https://api.github.com/repos/Geode-solutions/actions/contents/code_sign.cmake -H "Accept: application/vnd.github.raw" > code_sign.cmake
          if(!(test-path build)) { mkdir build }
          cd build
          cmake -G "Ninja" ${{ inputs.extra }} -DCMAKE_BUILD_TYPE=${{ inputs.config }} -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_PREFIX_PATH:PATH="${{ steps.repos.outputs.path }}" -D${{ inputs.name }}_WITH_TESTS:BOOL=OFF -DINCLUDE_PYBIND11:BOOL=ON -DCPACK_PACKAGE_VERSION:STRING=${{ inputs.version }} -DCPACK_SYSTEM_NAME:STRING=win64 -DCPACK_PRE_BUILD_SCRIPTS:FILEPATH="${{ github.workspace }}/code_sign.cmake" ..
          cmake --build . -j 2
          if(!$?) { cmake --build . -j 1 }
          cd ${{ inputs.directory }}
          cpack -D CPACK_COMPONENTS_ALL="public;private"
          get-childitem *.zip | foreach { rename-item $_ $_.Name.Replace(".zip", "-private.zip") }
          cmake --build . --target package
          Remove-Item -Recurse -Force _CPack_Packages
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
      - name: Upload
        run: |
          Get-ChildItem -Path "build/${{ inputs.directory }}" -Filter *.zip | Foreach-Object { gh release upload --clobber --repo ${env:GITHUB_REPOSITORY} ${{ inputs.release }} $_.FullName }
        env:
          GITHUB_TOKEN: ${{ github.token }}
