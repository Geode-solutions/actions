on:
  workflow_call:
    inputs:
      use_internal:
        type: boolean
        default: false
      # repos:
      #   type: string
      branch:
        type: string
        default: ${{ github.ref_name }}
    outputs:
      changes_detected:
        description: "commit has been done"
        value: ${{ jobs.prepare.outputs.changes_detected }}
    secrets:
      TOKEN:
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.commit.outputs.changes_detected }}
    steps:
      - name: Checkout
        uses: Geode-solutions/actions/install/checkout@master
        with:
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - name: pip-compile
        uses: Geode-solutions/actions/install/pip-compile@master
        with:
          folders: .
          use_internal: ${{ inputs.use_internal }}
      - name: "Get config files"
        run: |
          curl -H "Accept: application/vnd.github.VERSION.raw" -H "Authorization: token ${{ secrets.TOKEN }}" https://api.github.com/repos/Geode-solutions/actions/contents/commitlint.config.js\?ref\=master > commitlint.config.js
          curl -H "Accept: application/vnd.github.VERSION.raw" -H "Authorization: token ${{ secrets.TOKEN }}" https://api.github.com/repos/Geode-solutions/actions/contents/.pylintrc\?ref\=master > .pylintrc
          curl -H "Accept: application/vnd.github.VERSION.raw" -H "Authorization: token ${{ secrets.TOKEN }}" https://api.github.com/repos/Geode-solutions/actions/contents/.releaserc\?ref\=master > .releaserc
          curl -H "Accept: application/vnd.github.VERSION.raw" -H "Authorization: token ${{ secrets.TOKEN }}" https://api.github.com/repos/Geode-solutions/actions/contents/mypy.ini\?ref\=master > mypy.ini
      - name: Black
        run: |
          pip install black
          black .
      - name: Json
        id: json
        run: |
          if [ ! -f "package.json" ]; then
            echo "json=true" >> $GITHUB_OUTPUT
          else
            echo "json=false" >> $GITHUB_OUTPUT
          fi
      # - name: Install dependencies
      #   if: ${{ steps.json.outputs.json == 'true' }}
      #   uses: Geode-solutions/actions/install/node-dependencies@master
      #   with:
      #     repos: ${{ inputs.repos }}
      #     branch: ${{ inputs.branch }}
      #     token: ${{ secrets.TOKEN }}
      #     use_registry: false
      # - name: Run tests
      #   if: ${{ steps.json.outputs.json == 'true' }}
      #   run: |
      #     npm run build
      - uses: stefanzweifel/git-auto-commit-action@v5
        id: commit
        with:
          commit_message: Apply prepare changes
