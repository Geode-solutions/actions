on:
  workflow_call:
    inputs:
      repos:
        type: string
      docker:
        type: boolean
        default: false
      python:
        type: boolean
        default: true
      npm:
        type: boolean
        default: false
    secrets:
      TOKEN:
        required: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    uses: Geode-solutions/actions/.github/workflows/py-prepare.yml@master
    secrets: inherit

  checkers:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}
      - uses: dciborow/action-pylint@main
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          glob_pattern: "**/*.py"
      - uses: tsuyoshicho/action-mypy@v5
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          mypy_flags: "--config-file mypy.ini"
          setup_method: "install"
          install_types: false
          fail_level: any
          fail_on_error: true

  test-repository:
    needs: prepare
    uses: Geode-solutions/actions/.github/workflows/web-test-repository.yml@master
    with:
      repos: ${{ inputs.repos }}
      branch: ${{ github.event.pull_request.head.ref }}
      docker: ${{ inputs.docker }}
      python: ${{ inputs.python }}
      npm: ${{ inputs.npm }}
    secrets: inherit

  semantic-commit:
    needs: prepare
    uses: Geode-solutions/actions/.github/workflows/semantic-commit.yml@master
    secrets: inherit

  release:
    needs: [test-repository, semantic-commit, checkers]
    uses: Geode-solutions/actions/.github/workflows/dev-release.yml@master

  deploy-repository:
    needs: release
    uses: Geode-solutions/actions/.github/workflows/web-deploy-repository.yml@master
    with:
      repos: ${{ inputs.repos }}
      branch: ${{ github.event.pull_request.head.ref }}
      version: "0.0.0"
      release: ${{ github.head_ref }}-tag
      release_channel: ${{ needs.release.outputs.new_release_channel }}
      upload: false
      python: ${{ inputs.python }}
      npm: ${{ inputs.npm }}
      docker: ${{ inputs.docker }}
    secrets: inherit
