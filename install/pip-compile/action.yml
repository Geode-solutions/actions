name: "Install pip-compile"

inputs:
  folders:
    type: string
    required: true
  use_internal:
    type: boolean
    required: true

runs:
  using: "composite"
  steps:
    - name: "pip-compile"
      run: |
        IFS=';' read -ra folders <<< "${{ inputs.folders }}"
        for folder in "${folders[@]}"; do
          echo "Current folder: $folder"
          file_in=$folder/requirements.in
          if [ ! -f "$file_in" ]; then 
            echo "File $file_in not found"
            exit 1
          fi
          file_internal_in=$folder/requirements-internal.in
          if [ ! -f "$file_internal_in" ]; then 
            echo "File $file_internal_in not found"
            exit 1
          fi
          file_txt=$folder/requirements.txt
          rm -f $file_txt
          pip install pip-tools
          pip-compile -v $file_in --output-file $file_txt
          echo "" >> $file_txt
          if [ ${{ inputs.use_internal }} == "true" ]; then
            echo "Processing $file_internal_in"
            [ "$(tail -c 1 $file_internal_in | wc -l)" -eq 0 ] && echo "" >> $file_internal_in
            while read -r package; do
              if [ -z "$package" ]; then
                continue
              fi
              echo "Package: $package"
              full_version=$(pip index versions --pre $package | grep $package | cut -d'(' -f2 | cut -d')' -f1)
              echo "Full version: $full_version"
              major=$(echo "$full_version" | sed -E 's/^([0-9]+\.).*/\1/')
              echo "Major: $major"
              echo "$package==$major*;>=$full_version" >> $file_txt
            done < "$file_internal_in"
          fi
          echo "Final content of $file_txt:"
          cat $file_txt
        done
      shell: bash
