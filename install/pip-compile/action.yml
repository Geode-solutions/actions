name: "Install pip-compile"

inputs:
  folders:
    type: string
    required: true
  use_internal:
    type: boolean
    required: true

runs:
  using: "composite"
  steps:
    - name: "pip-compile"
      run: |
        IFS=';' read -ra folders <<< "${{ inputs.folders }}"
        for folder in "${folders[@]}"; do
          echo "Current folder: $folder"
          file_in=$folder/requirements.in
          if [ ! -f "$file_in" ]; then 
            echo "File $file_in not found"
            exit 1
          fi
          file_internal_in=$folder/requirements-internal.in
          if [ ! -f "$file_internal_in" ]; then 
            echo "File $file_internal_in not found"
            exit 1
          fi
          file_txt=$folder/requirements.txt
          rm -f $file_txt
          cp $file_in $file_txt
          if [ ${{ inputs.use_internal }} == "true" ]; then
            echo "Processing $file_internal_in"
            echo "" >> $file_internal_in
            while read -r package; do
              echo "Package: $package"
              if [ -z "$package" ]; then
                continue
              fi
              echo "Package: $package"
              version=$(pip index versions --pre $package | grep $package | cut -d'(' -f2 | cut -d')' -f1| sed 's/\.[0-9]*$//')
              echo "Version: $version"
              echo "$package~=$version" >> $file_txt
            done < "$file_internal_in"
            sed -i '$d' "$file_internal_in"
          fi
          cat $file_txt
        done
      shell: bash
