on:
  workflow_call:
    outputs:
      python:
        value: ${{ jobs.config.outputs.python }}
      docker:
        value: ${{ jobs.config.outputs.docker }}
    secrets:
      TOKEN:
        required: true
jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.config.outputs.python }}
      docker: ${{ steps.config.outputs.docker }}
    steps:
      - name: Checkout
        uses: Geode-solutions/actions/install/checkout@master
        with:
          token: ${{ secrets.TOKEN }}
      - name: Read config
        id: config
        run: |
          declare -A DEFAULTS=(
            ["python"]=true
            ["docker"]=false
          )
          CONFIG_FILE=".github/workflows/config.json"
          if [[ -f "$CONFIG_FILE" ]]; then
            for key in "${!DEFAULTS[@]}"; do
              value=$(jq -r --arg key "$key" '
                if has($key) then
                  if .[$key] != null then
                    .[$key]
                  else
                    "null"
                  end
                else
                  empty
                end
              ' "$CONFIG_FILE" 2>/dev/null)

              # If jq returned a value (including "null"), use it; otherwise, use default
              if [[ -n "$value" ]]; then
                echo "$key: $value (from config)"
                echo "$key=$value" >> "$GITHUB_OUTPUT"
              else
                echo "$key: ${DEFAULTS[$key]} (default)"
                echo "$key=${DEFAULTS[$key]}" >> "$GITHUB_OUTPUT"
              fi
            done
          else
            # If config file doesn't exist, use all defaults
            echo "Config file $CONFIG_FILE not found, using defaults"
            for key in "${!DEFAULTS[@]}"; do
              echo "$key: ${DEFAULTS[$key]} (default)"
              echo "$key=${DEFAULTS[$key]}" >> "$GITHUB_OUTPUT"
            done
          fi
