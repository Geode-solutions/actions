on:
  workflow_call:
    inputs:
      repos:
        type: string
      branch:
        type: string
        default: ${{ github.ref }}
      docker:
        type: boolean
        required: true
      python:
        type: boolean
        required: true
      npm:
        type: boolean
        required: true
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  test-python:
    if: inputs.python
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: Geode-solutions/actions/get-release@master
        id: wheels
        with:
          repository: ${{ inputs.repos }}
          file: ".whl"
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - name: Install dependencies
        run: |
          pip install --extra-index-url https://wheels.vtk.org .[cpu]
          wheels=$(echo "${{ steps.wheels.outputs.path }}" | sed 's/\;/\ /g')
          echo $wheels
          if [ -n "$wheels" ]; then 
            pip install --no-deps $wheels
          fi
          pip list
        shell: bash
      - name: Test
        run: |
          pip install pytest pytest-xprocess
          pytest

  test-npm:
    if: inputs.npm
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - uses: Geode-solutions/actions/get-release@master
        id: tarball
        with:
          repository: ${{ inputs.repos }}
          file: ".tgz"
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - name: Install dependencies
        run: |
          npm install
          tarballs=$(echo "${{ steps.tarball.outputs.path }}" | sed 's/\;/\ /g')
          echo "Tarballs = $tarballs"
          if [ -n "$tarballs" ]; then 
            npm install $tarballs
          fi
          npm list --depth=0
        shell: bash
      - name: Test
        run: |
          os=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          echo "Running tests for OS: $os"
          if jq -e ".scripts.[\"test:$os\"]" package.json >/dev/null; then
            npm run test:$os
          else
            npm run test
          fi
        shell: bash
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ runner.os }}
          path: playwright-report/
          retention-days: 5

  test-docker:
    if: inputs.docker
    uses: Geode-solutions/actions/.github/workflows/docker-build-squash-push.yml@master
    with:
      tag: test
      upload: false
    secrets:
      TOKEN: ${{secrets.TOKEN}}
