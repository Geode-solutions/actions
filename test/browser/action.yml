name: "Test Browser"

inputs:
  repos:
    type: string
  branch:
    type: string
  tarballs:
    type: string
  wheels:
    type: string
  microservices:
    type: string
  use_registry:
    type: boolean
    required: true
  token:
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      uses: Geode-solutions/actions/install/node-dependencies@master
      with:
        repos: ${{ inputs.repos }}
        branch: ${{ inputs.branch }}
        token: ${{ inputs.token }}
        tarballs: ${{ inputs.tarballs }}
        use_registry: ${{ inputs.use_registry }}
    - name: Install Microservices
      uses: Geode-solutions/actions/install/microservices@master
      with:
        repos: ${{ inputs.repos }}
        branch: ${{ inputs.branch }}
        token: ${{ inputs.token }}
        wheels: ${{ inputs.wheels }}
        microservices: ${{ inputs.microservices }}
        use_registry: ${{ inputs.use_registry }}
    - name: Install Playwright
      uses: Geode-solutions/actions/install/playwright@master
    - name: Build
      run: |
        npm run build:browser
      shell: bash
    - name: Test on Linux
      if: runner.os == 'Linux'
      run: |
        xvfb-run -n 99 --server-args="-screen 0 1280x960x24" npm run test:e2e:browser
      shell: bash
      env:
        DEBUG: "pw:browser"
    - name: Test on Windows
      if: runner.os == 'Windows'
      run: |
        npm run test:e2e:browser
      shell: bash
      env:
        DEBUG: "pw:browser"
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-browser-${{ runner.os }}
        path: playwright-report/
