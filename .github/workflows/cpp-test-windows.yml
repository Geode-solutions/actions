on:
  workflow_call:
    inputs:
      directory:
        type: string
        default: "."
      repos:
        type: string
      light:
        type: boolean
        default: false
      type:
        type: string
        default: "Debug"
      branch:
        type: string
        default: ${{ github.ref_name }}
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: Geode-solutions/actions/install/checkout@master
        with:
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - name: Install dependencies
        uses: Geode-solutions/actions/install/cpp-dependencies@master
        id: repos
        with:
          repos: ${{ inputs.repos }}
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
          system: win64
      - name: Libraries
        id: libraries
        run: |
          $old_path = "${{ steps.repos.outputs.path }}"
          $bin_path = $old_path.replace(";", "\bin;")
          echo "bin=$bin_path" >> $env:GITHUB_OUTPUT
          $share_path = $old_path.replace(";", "\share;")
          echo "share=$share_path" >> $env:GITHUB_OUTPUT
      - uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      - name: Compile & Test
        run: |
          if(!(test-path build)) { mkdir build }
          cd build
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=${{ inputs.type }} -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_PREFIX_PATH="${{ steps.repos.outputs.path }}" ..
          cmake --build . -t third_party
          cd ${{ inputs.directory }}
          $paths = "${{ steps.libraries.outputs.bin }}"
          echo $paths
          Foreach($path in $paths.split(";")){
            if(Test-Path -Path $path) {
              Copy-Item -Path $path\* -Destination bin
            }
          }
          if(!(test-path share)) { 
            mkdir share
          }
          $shares = "${{ steps.libraries.outputs.share }}"
          echo $shares
          Foreach($share in $shares.split(";")){
            if(Test-Path -Path $share) {
              Copy-Item -Path $share\* -Destination share -Recurse
            }
          }
          cmake --build . -j 2
          cmake --build . -t install
          ctest --output-on-failure --no-tests=error -j 2 -LE unstable
        env:
          GEODE_LICENSE_LOCATION: ${{ github.workspace }}/geode.lic
