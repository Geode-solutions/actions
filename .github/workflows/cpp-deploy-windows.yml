on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      directory:
        type: string
        default: "."
      repos:
        type: string
      repo:
        type: string
        default: ${{ github.repository }}
      config:
        type: string
        default: "Release"
      version:
        type: string
        required: true
      release:
        type: string
        required: true
      extra:
        type: string
        default: ""
      branch:
        type: string
        default: ${{ github.ref }}
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  windows:
    runs-on: windows-2019
    strategy:
      matrix:
        shared: ["ON", "OFF"]
    steps:
      - name: Get info
        id: info
        run: |
          if( "${{ matrix.shared }}" -eq "ON" ) {
            echo "name=win64" >> $env:GITHUB_OUTPUT
          }
          else {
            echo "name=win64-static" >> $env:GITHUB_OUTPUT
          }
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          token: ${{ secrets.TOKEN }}
      - uses: actions/cache/restore@v3
        with:
          path: build/third_party
          key: ${{ runner.os }}-${{ steps.info.outputs.name }}-${{ hashFiles('cmake/Configure**.cmake') }}
      - uses: Geode-solutions/actions/get-release@master
        id: repos
        with:
          repository: ${{ inputs.repos }}
          file: "-${{ steps.info.outputs.name }}-private.zip"
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - uses: TheMrMilchmann/setup-msvc-dev@v2
        with:
          arch: x64
      - name: Generate package
        run: |
          choco install openssl -r --no-progress
          if(!$?) { exit 1 }
          if(!(test-path build)) { mkdir build }
          cd build
          cmake -G "Ninja" ${{ inputs.extra }} -DCMAKE_BUILD_TYPE=${{ inputs.config }} -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shared }} -DCMAKE_PREFIX_PATH:PATH="${{ steps.repos.outputs.path }}" -D${{ inputs.name }}_WITH_TESTS:BOOL=OFF -DINCLUDE_PYBIND11:BOOL=ON -DCPACK_PACKAGE_VERSION:STRING=${{ inputs.version }} -DCPACK_SYSTEM_NAME:STRING=${{ steps.info.outputs.name }} ..
          cmake --build .
          cd ${{ inputs.directory }}
          cpack -D CPACK_COMPONENTS_ALL="public;private"
          get-childitem *.zip | foreach { rename-item $_ $_.Name.Replace(".zip", "-private.zip") }
          cmake --build . --target package
          Remove-Item -Recurse -Force _CPack_Packages
      - name: Upload
        run: |
          Get-ChildItem -Path "build/${{ inputs.directory }}" -Filter *.zip | Foreach-Object { gh release upload --clobber --repo ${env:GITHUB_REPOSITORY} ${{ inputs.release }} $_.FullName }
        env:
          GITHUB_TOKEN: ${{ github.token }}
      # - name: Notify slack
      #   if: failure()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: failure
      #     fields: repo,message,commit,author,action,eventName,ref,workflow
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
