on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      directory:
        type: string
        default: "."
      repos:
        type: string
      light:
        type: boolean
        default: false
      type:
        type: string
        default: "Debug"
      branch:
        type: string
        default: ${{ github.ref }}
      wheels_from_pypi:
        type: boolean
        default: false
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  windows-python:
    runs-on: windows-2019
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
        exclude:
          - python: ${{ inputs.light && '3.8' || 'dummy' }}
          - python: ${{ inputs.light && '3.9' || 'dummy' }}
          - python: ${{ inputs.light && '3.10' || 'dummy' }}
    steps:
      - name: Get info
        id: info
        run: |
          $tag = "cp${{ matrix.python }}-cp${{ matrix.python }}"
          $tag = $tag.Replace(".", "")
          $tag >> $env:GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
      - uses: actions/cache/restore@v3
        with:
          path: build/third_party
          key: ${{ runner.os }}-win64-${{ hashFiles('cmake/Configure**.cmake') }}
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - uses: Geode-solutions/actions/get-release@master
        id: repos
        with:
          repository: ${{ inputs.repos }}
          file: "-win64-private.zip"
          token: ${{ secrets.TOKEN }}
      - name: Libraries
        id: libraries
        run: |
          $old_path = "${{ steps.repos.outputs.path }}"
          $bin_path = $old_path.replace(";", "\bin;")
          echo "bin=$bin_path" >> $env:GITHUB_OUTPUT
          $share_path = $old_path.replace(";", "\share;")
          echo "share=$share_path" >> $env:GITHUB_OUTPUT
      - uses: Geode-solutions/actions/get-release@master
        if: !inputs.wheels_from_pypi
        id: wheels
        with:
          repository: ${{ inputs.repos }}
          file: "-${{ steps.info.outputs.tag }}-win_amd64.whl"
          token: ${{ secrets.TOKEN }}
      - name: Wheels from Github
        if: !inputs.wheels_from_pypi
        run: |
          wheels=$(echo "${{ steps.wheels.outputs.path }}" | sed 's/\;/\ /g')
          echo $wheels
          pip install --no-deps $wheels
      - name: Wheels from Pypi
        if: inputs.wheels_from_pypi
        run: |
          $requirements = "bindings/python/requirements.txt"
          if(test-path -Path $requirements -PathType Leaf) {
            pip install --pre -r $requirements
          }
      - uses: TheMrMilchmann/setup-msvc-dev@v2
        with:
          arch: x64
      - name: Compile & Test
        run: |
          pip install wheel
          choco install openssl -r --no-progress
          if(!(test-path build)) { 
            mkdir build
          }
          cd build
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=${{ inputs.type }} -DCMAKE_PREFIX_PATH="${{ steps.repos.outputs.path }}" -D${{ inputs.name }}_WITH_PYTHON:BOOL=ON -DPYTHON_VERSION:STRING=${{ matrix.python }} ..
          cmake --build .
          cd ${{ inputs.directory }}
          $paths = "${{ steps.libraries.outputs.bin }}"
          echo $paths
          Foreach($path in $paths.split(";")){
            if(Test-Path -Path $path) {
              Copy-Item -Path $path\* -Destination bin
            }
          }
          if(!(test-path share)) { 
            mkdir share
          }
          $shares = "${{ steps.libraries.outputs.share }}"
          echo $shares
          Foreach($share in $shares.split(";")){
            if(Test-Path -Path $share) {
              echo $share
              Copy-Item -Path $share\* -Destination share -Recurse
            }
          }
          ctest --output-on-failure -R -py- -j 2
          cmake --build . --target wheel
          cmake --build . --target test-wheel
        env:
          GEODE_LICENSE_LOCATION: ${{ github.workspace }}/geode.lic
      - name: Notify slack
        if: failure() && github.ref == 'refs/heads/next'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
