on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      directory:
        type: string
        default: "."
      repos:
        type: string
      repo:
        type: string
        default: ${{ github.repository }}
      version:
        type: string
        required: true
      release:
        type: string
        required: true
      extra:
        type: string
        default: ""
      branch:
        type: string
        default: ${{ github.ref }}
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  linux:
    runs-on: ubuntu-latest
    container: ghcr.io/geode-solutions/${{ matrix.system }}:master
    strategy:
      matrix:
        system: ["ubuntu", "rhel"]
        shared: ["ON", "OFF"]
    steps:
      - name: Get info
        id: info
        run: |
          if [ "${{ matrix.shared }}" = "ON" ]; then
            echo "name=${{ matrix.system }}" >> $GITHUB_OUTPUT
          else
            echo "name=${{ matrix.system }}-static" >> $GITHUB_OUTPUT
          fi

          if [ "${{ matrix.system }}" = "rhel" ]; then
            echo "lib=lib64" >> $GITHUB_OUTPUT
          else
            echo "lib=lib" >> $GITHUB_OUTPUT
          fi
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          token: ${{ secrets.TOKEN }}
      - uses: actions/cache/restore@v3
        with:
          path: build/third_party
          key: ${{ runner.os }}-${{ steps.info.outputs.name }}-${{ hashFiles('cmake/Configure**.cmake') }}
      - uses: Geode-solutions/actions/get-release@master
        id: repos
        with:
          repository: ${{ inputs.repos }}
          file: "-${{ steps.info.outputs.name }}-private.tar.gz"
          token: ${{ secrets.TOKEN }}
          branch: ${{ inputs.branch }}
      - name: Libraries
        id: libraries
        run: |
          new_path=$(echo "${{ steps.repos.outputs.path }}" | sed 's/\;/\/${{ steps.info.outputs.lib }}\:/g')
          echo "LD_LIBRARY_PATH=$new_path" >> $GITHUB_ENV
      - name: Generate package
        run: |
          mkdir -p build
          cd build
          cmake -G "Ninja" ${{ inputs.extra }} -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=${{ matrix.shared }} -DCMAKE_PREFIX_PATH="${{ steps.repos.outputs.path }}" -D${{ inputs.name }}_WITH_TESTS:BOOL=OFF -DINCLUDE_PYBIND11:BOOL=ON -DCPACK_PACKAGE_VERSION:STRING=${{ inputs.version }} -DCPACK_SYSTEM_NAME:STRING=${{ steps.info.outputs.name }} ..
          cmake --build . -j 2
          cd ${{ inputs.directory }}
          cpack -D CPACK_COMPONENTS_ALL="public;private" .
          for i in *.tar.gz; do mv $i $(echo $i | sed 's/\.tar\.gz/\-private\.tar\.gz/g'); done
          cmake --build . --target package
      - name: Upload
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          files="build/${{ inputs.directory }}/*.tar.gz"
          for file in $files
          do
            echo $file
            counter=0
            for i in 1 2 3 4 5; do gh release upload --clobber --repo $GITHUB_REPOSITORY ${{ inputs.release }} $file && break || counter=$[$counter +1] && sleep 30; done
            echo $counter
            if [ "$counter" -eq "5" ]; then exit 1; fi
          done
          echo "base_directory=$(pwd)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Doc
        if: matrix.shared == 'ON' && matrix.system == 'ubuntu' && github.ref == 'ref/head/master'
        uses: Geode-solutions/actions/doc@master
        with:
          directory: ${{ inputs.directory }}
          base_directory: ${{ env.base_directory }}
          token: ${{ secrets.TOKEN }}
      # - name: Notify slack
      #   if: failure()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: failure
      #     fields: repo,message,commit,author,action,eventName,ref,workflow
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
