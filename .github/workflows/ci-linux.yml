on: 
  workflow_call:
    inputs:
      directory:
        type: string
        default: "."
      repos:
        type: string
      branch:
        type: string
        default: "master"
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  run:
    runs-on: ubuntu-latest
    container: ${{ matrix.config.container }}
    strategy:
      matrix:
        config:
        - {container: "ghcr.io/geode-solutions/ubuntu:master", system: "ubuntu", lib: "lib", shared: "ON"}
        - {container: "ghcr.io/geode-solutions/centos:master", system: "rhel", lib: "lib64", shared: "ON"}
        - {container: "ghcr.io/geode-solutions/ubuntu:master", system: "ubuntu-static", lib: "lib", shared: "OFF"}
        - {container: "ghcr.io/geode-solutions/centos:master", system: "rhel-static", lib: "lib64", shared: "OFF"}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: build/third_party
        key: ${{ runner.os }}-${{ matrix.config.system }}-${{ hashFiles('cmake/Configure**.cmake') }}
    - uses: Geode-solutions/actions/get-release@master
      id: repos
      with:
        repository: ${{ inputs.repos }}
        file: '-${{ matrix.config.system }}-private.tar.gz'
        token: ${{ secrets.TOKEN }}
        version: ${{ inputs.branch }}
      - name: Libraries
      id: libraries
      run: |
        new_path=$(echo "${{ steps.repos.outputs.path }}" | sed 's/\;/\/${{ matrix.config.lib }}\:/g')
        echo "LD_LIBRARY_PATH=$new_path" >> $GITHUB_ENV
    - name: Compile
      run: |
        mkdir -p build
        cd build
        cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS:BOOL=${{ matrix.config.shared }} -DCMAKE_PREFIX_PATH="${{ steps.repos.outputs.path }}" ..
        cmake --build . -t third_party
        cd ${{ inputs.directory }}
        cmake --build . -t essential
        cmake --build . -t install
        ctest --output-on-failure -j 2 -L essential
      env:
        GEODE_LICENSE_LOCATION: ${{ github.workspace }}/geode.lic
    - name: Test
      run: |
        rm -rf $GITHUB_WORKSPACE/build/${{ inputs.directory }}/bin
        mkdir -p test
        cd test
        cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH:PATH="${{ steps.repos.outputs.path }};$GITHUB_WORKSPACE/build/${{ inputs.directory }}/install;$GITHUB_WORKSPACE/build" ../tests
        if [ "${{ matrix.config.shared }}" = "ON" ]; then 
          cmake --build .
          ctest --output-on-failure -j 2
        else
          cmake --build . -t essential
          ctest --output-on-failure -j 2 -L essential
        fi
      env:
        GEODE_LICENSE_LOCATION: ${{ github.workspace }}/geode.lic
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
