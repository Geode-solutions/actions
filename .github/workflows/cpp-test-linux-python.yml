on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      directory:
        type: string
        default: "."
      repos:
        type: string
      light:
        type: boolean
        default: false
    secrets:
      TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  linux-python:
    runs-on: ubuntu-latest
    container: "ghcr.io/geode-solutions/centos:master"
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
        exclude:
          - python: ${{ inputs.light && '3.8' || 'dummy' }}
          - python: ${{ inputs.light && '3.9' || 'dummy' }}
          - python: ${{ inputs.light && '3.10' || 'dummy' }}
    steps:
      - name: Get info
        id: info
        run: |
          echo "tag=cp${{ matrix.python }}-cp${{ matrix.python }}" | sed 's/\.//g' >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - uses: actions/cache/restore@v3
        with:
          path: build/third_party
          key: ${{ runner.os }}-rhel-${{ hashFiles('cmake/Configure**.cmake') }}
      - uses: Geode-solutions/actions/get-release@master
        id: repos
        with:
          repository: ${{ inputs.repos }}
          file: "-rhel-private.tar.gz"
          token: ${{ secrets.TOKEN }}
      - name: Libraries
        id: libraries
        run: |
          new_path=$(echo "${{ steps.repos.outputs.path }}" | sed 's/\;/\/lib64\:/g')
          echo "LD_LIBRARY_PATH=$new_path" >> $GITHUB_ENV
      - name: Compile
        run: |
          export PATH=/opt/python/${{ steps.info.outputs.tag }}/bin:$PATH
          requirements="bindings/python/requirements.txt"
          if [ -f "$requirements" ]; then 
            pip install --pre -r $requirements
          fi
          mkdir -p build
          cd build
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH="${{ steps.repos.outputs.path }}" -D${{ inputs.name }}_WITH_PYTHON:BOOL=ON -DPYTHON_VERSION:STRING=${{ matrix.python }} ..
          cmake --build .
          cd ${{ inputs.directory}}
          ctest --output-on-failure -R -py- -j 2
          cmake --build . --target wheel
          cmake --build . --target test-wheel
        env:
          GEODE_LICENSE_LOCATION: ${{ github.workspace }}/geode.lic
      - name: Notify slack
        if: failure() && github.ref == 'refs/heads/next'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
